package chapter_9

fun main() {
    val listik = listOf("First", "Second", "Third")

    if (listik.isNotEmpty()) println(listik[0])
    println("--------------------------------")
    for (item in listik) println(item)
    println("--------------------------------")
    if (listik.contains("Second")) println(listik.indexOf("Second"))
    println("--------------------------------")

    val shopping = mutableListOf("Milk", "Chips", "Cola")
    shopping.add("Eggs")
    shopping.add(1, "Tea")
    println(shopping.toString())
    println("--------------------------------")
    if (shopping.contains("Chips")) shopping.remove("Chips")
    if (shopping.size > 3) shopping.removeAt(2)
    println(shopping.toString())
    println("--------------------------------")
    if (shopping.contains("Tea")) shopping[shopping.indexOf("Tea")] = "Coffee"
    shopping.sort()
    shopping.reverse()
    println(shopping.toString())
    println("--------------------------------")
    shopping.shuffle()
    for (item in shopping) println(item)
    println("--------------------------------")
    shopping.addAll(listik)
    println(shopping.toString())
    println("--------------------------------")
    shopping.removeAll(listik)
    println(shopping.toString())
    println("--------------------------------")
    shopping.addAll(listik)
    shopping.retainAll(listik)
    println(shopping.toString())
    println("--------------------------------")
    shopping.clear()
    println(shopping.toString())
    println("--------------------------------")
    shopping.add("Beer")
    var newShopping = shopping.toList()
    println(newShopping.toString())
    println("--------------------------------")
    newShopping = newShopping.sorted()
    println(newShopping.toString())
    println("--------------------------------")
    newShopping.reversed()
    println(newShopping.toString())
    println("--------------------------------")
    newShopping.shuffled()
    println(newShopping.toString())
    println("--------------------------------")

    val friendSet = setOf("Lui", "David", "Anna")
    println(friendSet)
    println("--------------------------------")
    val newFriendSet = friendSet.toMutableSet()
    newFriendSet.add("Lui")
    println(newFriendSet)
    println("--------------------------------")
    println(newFriendSet.contains("Lili"))
    println("--------------------------------")

    val r1 = "Chicken Soup"
    val r2 = "Quinoa Salad"
    val r3 = "Thai Curry"
    val recipes = mapOf<String, String>("Recipe1" to r1, "Recipe2" to r2, "Recipe3" to r3)
    println(recipes.containsKey("Recipe4"))
    println(recipes.containsValue(r1))
    val recipe = recipes.getValue("Recipe3")
    println("--------------------------------")
    for ((key, value) in recipes) println("${key}: $value")
    println("--------------------------------")
    val newRecipes = recipes.toMutableMap()
    newRecipes.put("Recipe4", "$r2 $r3")
    newRecipes.putAll(recipes)
    println(newRecipes)
    newRecipes.remove("Recipe4")
    newRecipes.remove("Recipe1", r2)
    println(newRecipes)
    println("--------------------------------")
    val recipeEntries = newRecipes.entries
    println(recipeEntries)
    val keys = newRecipes.keys
    val values = newRecipes.values
    println("$keys\n$values")
    println("--------------------------------")
}